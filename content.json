{"meta":{"title":"OreChou's Batcave","subtitle":"Coding & Reading & Playing & Listening","description":"Coding & Reading & Playing & Listening","author":"OreChou","url":"https://orechou.github.io","root":"/"},"pages":[{"title":"Books Of My Life.","date":"2022-12-16T09:59:16.433Z","updated":"2022-04-08T16:13:27.313Z","comments":true,"path":"book/index.html","permalink":"https://orechou.github.io/book/index.html","excerpt":"","text":"技术书籍《数据密集型应用系统设计》豆瓣《Effective Java中文版（第3版）》豆瓣 金融书籍《区块链实战》该书比较全面的介绍区块链基本原理、历史、发展和应用，是一本很好的概述性的书籍。对于区块链的技术细节和一些应用架构有所涉及，但不会深入。想要了解区块链的读者可以各取所需，到对应的章节了解想要了解的内容。 非技术书籍《读水浒：人性的十三种刻度》一本闲书，用了很快的时间读完。作者对水浒里面特殊的人物做了一些解读，又没有过渡解读。少年的时候读水浒，觉得水浒好玩。现如今长大了些，再读水浒，有了一些惊心动魄。人在成长，适应、妥协、接受着这个世界。"},{"title":"About me.","date":"2023-02-08T11:57:07.646Z","updated":"2023-01-20T08:20:54.726Z","comments":true,"path":"about/index.html","permalink":"https://orechou.github.io/about/index.html","excerpt":"","text":"Location0 ~ 25 years，重庆25 ~ Now, 深圳在重庆完成学业之后就来到深圳工作，从一个极 🌶 的城市到现在只能吃 🥥🐔，生活上的变化还是蛮大的。 Career2019.7 ~ 2021.6 维沃移动通信(深圳)有限公司|影像系统集成开发部|应用工程师负责影像相关的软件重构；图像图像渲染；预览平滑 VSYNC 优化；获创新奖、优秀奖。 2021.6 ~ 至今 牛客|企业服务部|后端工程师业务方向牛客企业端 saas 服务；负责牛客题库中台；负责牛客竞赛。 Education2012 ~ 2016 重庆大学|计算机学院|计算机科学与技术|本科2016 ~ 2019 重庆大学|计算机学院|计算机科学与技术|硕士 毕业课题相关的发布了三篇 CCF-C 类的会议论文，分别是：Spatially fine-grained air quality prediction based on DBU-LSTMA Novel Approach for Air Quality Inference and Prediction Based on DBU-LSTMDeep Spatial-Temporal Fusion Network for Fine-Grained Air Quality Prediction MeaningCoding &amp; Reading &amp; Playing &amp; Listening希望能够体验、记录更多的生活。构建这个博客小站，是为了让人看到，希望能交到一些朋友。😄"},{"title":"Games Of My Life.","date":"2022-12-16T09:59:16.639Z","updated":"2022-05-13T16:25:55.888Z","comments":true,"path":"game/index.html","permalink":"https://orechou.github.io/game/index.html","excerpt":"","text":"喜欢的游戏【1】Batman: Arkham Knight很喜欢在暴雨、黑夜中的哥谭市，扮演这位黑暗骑士的感觉。孤独、隐忍与信念。 【2】Middle-earth: Shadow of Mordor原创的一个刚铎游侠为守卫世界最后成为戒灵的故事。复仇、纠结与牺牲。游戏的结尾曲感人。 【3】Red Dead Redemption 2Read Dead Redemption 2 可以无限吹，18 年最佳游戏落败给战神 4 我是没想到的。"},{"title":"Gallery Of My Life.","date":"2022-12-16T09:59:17.022Z","updated":"2022-03-27T11:17:10.268Z","comments":true,"path":"gallery/index.html","permalink":"https://orechou.github.io/gallery/index.html","excerpt":"","text":"西门🐱：Pikachu"}],"posts":[{"title":"【Cyber Weekly】No.4 Do not go gentle into that good night","slug":"weekly/No.4 Do not go gentle into that good night","date":"2023-02-05T14:00:00.000Z","updated":"2023-02-05T09:51:27.522Z","comments":true,"path":"2023/02/05/weekly/No.4 Do not go gentle into that good night/","link":"","permalink":"https://orechou.github.io/2023/02/05/weekly/No.4%20Do%20not%20go%20gentle%20into%20that%20good%20night/","excerpt":"","text":"本周看了很多科幻影视剧，其实也就是《流浪地球2》和《三体》啦，所以本周的图片我将使用《星际穿越》的截图。[Doge]Do not go gentle into that good night. 资源开源项目归类网站Find Open Source该网站收录了 Github 上众多有价值的开源项目。可以按目录查找。 影子图书馆安娜的档案影子图书馆搜索引擎：书籍、论文、漫画、杂志。 包含：Z-Library、Library Genesis、Sci-Hub。 Big Ideas 2023ARK Invest | We Believe Innovation Is Key to Growth木头姐（Cathie Wood）的方舟投资公司（Ark Invest）发布了《Big Ideas 2023》年度投研报告，综述了全球最新的创新技术融合趋势，并覆盖了十三个创新领域的最新行业数据，分析及预测。 Web3.0创作者经济报告BlockBeats - 深度研究报告Web3.0创作者经济报告：CreatorFi的发展现状和想象空间 k8s_PaaSGitHub - ben1234560/k8s_PaaS: 如何基于K8s(Kubernetes)部署成PaaS/DevOps(一套完整的软件研发和部署平台)一个 k8s 的学习教程，一步步介绍如何部署成 PaaS/DevOps。 Damus推特创始人发布了基于 Nostr 的社交产品 Damus。去中心化，你将掌握自身数据，没人能够封禁你。我的公钥（身份地址）：npub1rfhhxz7n7ldu9wh8lc976ftjt0yrlan394mjr8ef4rmh789csucqteafdp 生活影视利刃出鞘2 Glass Onion: A Knives Out Mystery利刃出鞘2 (豆瓣)整个观影下来故事很易懂，故事剪辑的手法和故事讲述的顺序才让电视的时长达到了 2 个小时之久。不是很过瘾，演员的出场让我对电影的期待比较高，还有一些角色的出现让我没明白其中作用。比如岛上的陌生男子、码头上的《前目的地》男主。 流浪地球2流浪地球2 (豆瓣)除开电影里面的一些价值观输出，整个电影的剧情、结构还是很好的，整体比第一部好看很多。但 AI 的体现给人感觉没那么实际，或许是这一部份的逻辑体现不足。 阅读书籍：《从程序员到架构师》从程序员到架构师：大数据量 缓存、高并发、微服务 多团队协同等核心场景实战 (豆瓣)作者以自身的工作经历出发，结合实际的业务场景、技术背景来介绍了系统服务所遇到的问题，和相应的架构解决思路。有些点其实在工作中也能遇到，有相应体会。 书籍：《蛤蟆先生去看心理医生》蛤蟆先生去看心理医生 (豆瓣)恭喜蛤蟆先生找到了自我，走出了抑郁的阴影。有人会认为童年的不幸将会用一生来治愈，这种观念有点夸张，但童年对人影响巨大是毫无疑问的。我的成长中也经历了很多事情，让事情过去的方式，也只是让事情过去。我挺希望年轻时候能早点明白人格生成的原因，个人所处的心理状态，并知晓对应处理和转变观念的方式，或许能让自己心态没那么沉重。现在的生活也是考验，我希望我有“我好，你也好”的这种信念，让生活变美起来。 其他本周思想有了些变化，主要是意识到自己快 30 岁了，按照国内这样的内卷程度普通人 60 岁的时候可能就不行了。在深圳工作了 3 年，越发觉得留在这里得可能性越小，房价太高了。上上周的去看了师兄在坂田装修的新家，首付 150+、总价 500+ 的小三房，按照我们家现在的收入简直是要了老命。强行上车，往后的 30 年就是房子的奴隶，抵抗不了任何的风险，任何意外就是破产。一条明路是：轻松工作，体验生活，关爱家人。本周找出了毕业那会儿的 GoPro7 给家里小孩录录视频，另外下单了新的 m2 max 电脑，准备干点新事情。","categories":[],"tags":[{"name":"cyber weekly","slug":"cyber-weekly","permalink":"https://orechou.github.io/tags/cyber-weekly/"}]},{"title":"【效率】关于记录的工具及流程","slug":"other/关于记录的工具及流程","date":"2023-01-25T14:00:00.000Z","updated":"2023-01-25T15:11:49.858Z","comments":true,"path":"2023/01/25/other/关于记录的工具及流程/","link":"","permalink":"https://orechou.github.io/2023/01/25/other/%E5%85%B3%E4%BA%8E%E8%AE%B0%E5%BD%95%E7%9A%84%E5%B7%A5%E5%85%B7%E5%8F%8A%E6%B5%81%E7%A8%8B/","excerpt":"","text":"一直以来我对知识的整理记录主要以摘录为主，久而久之发现其检索和提取的十分不方便，发展到最后就是很难坚持。所以我也有看一些关于写作、知识管理、工具推荐的书籍和文章。启发最大的两本书是《卡片笔记写作法》和《写作这回事：创作生涯回忆录》，前者让我学习到一种知识的收集整理方法，后者让我找到一种坚持写作记录的信念。算是找到了一套比较符合我自己的工具和流程。现总结如下，因为自身是 Apple 生态的用户，所以工具的选择主要是考虑到跨设备，其次再考虑跨平台。 知识管理知识管理：Obsidian + Dropbox 。Obsidian 是一个基于文件的 Markdown 编辑器，特点是支持笔记的双向链接，其次能够使用很多三方插件对软件自身的功能进行补齐。相比于 Notion ，Obsidian 最大的优点是数据存储在本地，在如今的互联网时代，自身对数据拥有绝对自主权是最大的优势。当然使用 Obsidian 也需要考虑多端同步的问题，使用云存储服务的免费方案是很好的选择，例如 Dropbox 的免费 1 GB 的容量，对于纯文本笔记已经绰绰有余了。当然对于图片的需求，可以搭建免费（Github）的图床或收费的 OSS 服务（云服务厂商）。使用 Obsidian 完成知识管理，形成第二大脑，把内容和思维在工具上外显，主要注意以下几点： 使用文件目录分类，这主要是保留我之前的记录习惯。 所有的输入在 Obsidian 中进行，目的是将思维过程外显。 内容积累内容积累：Drafts。Drafts 是一个便捷的文本记录工具，文本格式支持普通文本和 Markdown，设备支持 Mac、iPhone、iPad，甚至还有 iWatch 应用。使用 iCloud 同步的体验非常好。另外 iWatch 的录音转文本的功能，可以在很多非通用场景下做文字记录。使用 Drafts 主要是完成卡片笔记的第一步，材料的收集，在收集的过程中主要注意以下几点： 非摘录内容必须用自己的话转述，这样才能确保内容已理解。 摘录的内容必须注明出处，这样才能方便后续知识管理的整理和引用。 记录的内容必须打上 Tag，方便后续提取和归纳。 每周定期回顾 Inbox 的内容，整理到 Obsidian 之中。 日记日常记录：Notes。Notes 是 Apple 原生的备忘录软件。其实日记有一款叫 iDaily 的软件很好，其还有插入定位和天气的功能，但这款软件已经从买断制变成了订阅制，订阅的费用不菲。对于我来说就没什么必要了，我用 Notes 搭配 iCloud 记录一些生活上的日记，能够上传图片即可。","categories":[],"tags":[{"name":"Tools","slug":"Tools","permalink":"https://orechou.github.io/tags/Tools/"},{"name":"Efficiency","slug":"Efficiency","permalink":"https://orechou.github.io/tags/Efficiency/"}]},{"title":"【Cyber Weekly】No.3 There and back again","slug":"weekly/No.3 There and back again","date":"2023-01-22T14:00:00.000Z","updated":"2023-01-23T14:11:47.675Z","comments":true,"path":"2023/01/22/weekly/No.3 There and back again/","link":"","permalink":"https://orechou.github.io/2023/01/22/weekly/No.3%20There%20and%20back%20again/","excerpt":"","text":"Cyber weekly 收录本人获取到的 Crypto、Backend &amp; Mobile 相关资讯、技术，另外夹杂一些生活记录。 有几周没有更新了，得了新冠之后恢复身体调整了比较久的时间，后面家里也有些事情就搁置了。现在春节前后也有点时间，就抽时间来续上。 Life读库本周买了一年的读库会员，京东上面的购买的话，除了今年的 6 本书以外，还有一年的读库 APP 会员，上面可以读往期的内容，还是比较划算。今年需要提升一下自己的阅读量，扩宽一下知识面。总的了解下来《读库》还是一个比较好的选择。上周一共看了两篇文章，一篇讲第九艺术的《暴风将至》和一篇互联网信息相关的《互联网是人类历史的一段歪路吗？》，后需整理一下相关的总结。 使用 n8n 聚合信息摄入和输出本周通过 n8n 使用自动工作流搭建了下信息摄入的聚合并输入到 telegram 的账号。参考了如下的两篇文章，使用自动化工作流聚合信息摄入和输出 | Reorx’s Forge ，使用 Railway 和 Supabase 零成本搭建 n8n 自动化平台 | Reorx’s Forge。除此之外，因为 twitter 的开发者账号能使用的 API 权限变更了，所以集成 twitter 进来还踩了一些坑。 除夕 &amp; 新年今年考虑到宝宝太小，今年没有回家去过年，待在深圳这边在岳父家过年了。算上来这也是第一次没有回家跟父母过春节，有些滋味是说不出来的。另外把家里一直隔离“小黑屋”的两小只放出来了，希望两小只能和女儿和平相处。 新年快乐。","categories":[],"tags":[{"name":"cyber weekly","slug":"cyber-weekly","permalink":"https://orechou.github.io/tags/cyber-weekly/"}]},{"title":"【生活】2023 年 OKR","slug":"life/2023 年 OKR","date":"2023-01-19T04:00:00.000Z","updated":"2023-01-23T14:17:58.633Z","comments":true,"path":"2023/01/19/life/2023 年 OKR/","link":"","permalink":"https://orechou.github.io/2023/01/19/life/2023%20%E5%B9%B4%20OKR/","excerpt":"","text":"今年的 OKR 如下，年底 review： 家庭okr1: 陪伴妻子和女儿成长 ，记录家人在一起、女儿成长的瞬间okr2: 定期给父母视频通话，频率由每月一次提高到每月两次okr3: 协助妻子确定其未来的职业方向okr4: 装修好在重庆的房子 个人成长okr1: 职业生涯更进一步，成为 senior engineer，扩展技术视野，入局 Web3okr2: 搭建知识管理系统，做好输入和输入，利用高效工具提升生产力okr3: 减少无意义的纯打发时间的娱乐，即使是游戏、电影，也争取做到有记录、有思考、有输出okr4: 维护个人博客、微信公众号、twitterokr5: 锻炼身体，增加体重（60kg）；锻炼与人沟通的能力 生活okr1: 旅游 3 次，每次 3 天以上，今年年底出入境放松的话去一趟日本okr2: 做好每日记录，文字记录，影像记录okr3: 应用软件数字移民，搭建 NAS 掌握私人数据 财务okr1: 美股年化收益率达 30%，不排除在 A 股、港股、数字货币市场寻找机会okr2: 控制家庭非必须消费，把钱用到刀刃上，做到能不消费的就不消费，必须消费的就消费最好的、长久的","categories":[],"tags":[{"name":"Life","slug":"Life","permalink":"https://orechou.github.io/tags/Life/"}]},{"title":"【Cyber Weekly】No.2 Red dead Redemption","slug":"weekly/No.2 Red dead Redemption","date":"2022-12-11T14:00:00.000Z","updated":"2022-12-12T02:00:06.781Z","comments":true,"path":"2022/12/11/weekly/No.2 Red dead Redemption/","link":"","permalink":"https://orechou.github.io/2022/12/11/weekly/No.2%20Red%20dead%20Redemption/","excerpt":"","text":"Cyber weekly 收录本人获取到的 Crypto、Backend &amp; Mobile 相关资讯、技术，另外夹杂一些生活碎嘴。“Cruel cruel world, must I go on? Cruel cruel world, I’m moving on.”本周事情较多。天气和疫情放开的原因，周末也没有出门，待在家里空了刷 RDR2 二周目。 Crypto# Web3 支付赛道全景式解读与趋势分析https://mp.weixin.qq.com/s?__biz=Mzg4MTU1MTE4NQ==&amp;mid=2247484501&amp;idx=1&amp;sn=16c9ed33fcb7a1558a848f4915791e6c&amp;chksm=cf65766bf812ff7d066285d03cf40a6f98055c14f44b8f361b83b6dac058069349d8c0c2b5fc#rd支付机构的基本面： 政策监管 商业模式（盈利方式：手续费、外汇、接入服务费、数字资产收益） 产品技术（包含：渠道层、支付网关、清结算系统 、通知模块、收银台） 全球出入金支付方式： 中心化交易所 独立出入金支付机构（Moonpay） 出入金聚合支付 加密货币零售终端（Bitcoin Depot） 场外出入金 加密货币支付解决方案 第三方支付机构先将加密货币通过出入金的方式换成法币，再进行支付。 直接用加密货币交易，用户和商家同事使用加密货币。 Web3 支付产品技术 Web3 支付行业赛道 Tether Launches Offshore Chinese Yuan（CNHT） on Tronhttps://twitter.com/Tether_to/status/1600148779721756672泰达在 Tron 上发行锚定离岸人民币（Offshore RMB，中国境外流通的人民币）的人民币稳定币。离岸人民币不受中国境内的货币政策限制，主要集中在香港、新加坡等城市流通。泰达发行的 CNHT 本质上和 USDT 无任何区别。CNHT 不需要真实的人民币保证金。泰达只保证了自己 USDT 的资产价值和自己发行的资产价值挂钩。其意义在于，深圳小电商，卖货到国外。外汇的话黑市很难，回款要快只能用 USDT。目前找现金境内对敲，风险高时间长，CNHT 可以离岸快速匹配对敲。 5 On-Chain Signals That We’ve Bottomedhttps://www.theblockbeats.info/news/327745 大链上信号表明Crypto市场已经触底，仅供参考，如下： DeF i 总收益率上升 ==&gt; 资本风险偏好增加 Curve pools 再平衡 ==&gt; 资本对USDT的担忧减小 合约维持资金负利率，价格却稳定 ==&gt; 多头在顽强抵抗 波动率水平正常化 ==&gt; 底部在形成 Smartmoney 稳定币持有量下降 ==&gt; 可能在抄底 BackendCPU 的制造和概念https://plantegg.github.io/2021/06/01/CPU的制造和概念/一篇介绍 CPU 基础相关知识的文章。 What is kubernetshttps://blog.bytebytego.com/p/ep35-what-is-kubernetesKubernets 的官网技术文档也详尽。不过最近在 newsletter 上订阅的 bytebytego 的文章，上面的一些文章配图清晰，文章简单容易理解，也是不错的。 LifeChatGPT本周注册了 ChatGPT ，慢慢尝试将他作为一个工作上的助手。 如何注册 地址：openai.com 挂日本全局梯子 SMS Activate 注册，使用印度号码激活。ChatGPT 为什么这么强。https://mp.weixin.qq.com/s/haaL-2XjRG0oS24pQyqw1AChatGPT 资源相关https://chrome.google.com/webstore/detail/chatgpt-for-google/jgjaeacdkonaoafenlfkkkmbaopkbilfChatGPT for Google，在使用 Chrome 使用谷歌搜索问题时，右侧会展示出 ChatGPT 的回答。https://github.com/f/awesome-chatgpt-prompts使用 ChatGPT 时的提示用例。 一份英语学习资源https://qwerty.kaiyi.cool/ 世界杯周末看了世界杯八强赛。巴西和克罗地亚点球大战时，巴西首罚球员一看就要丢，不明白为何首罚不安排内马尔。阿根廷和荷兰的点球大战时，首罚就是梅西。这种关键时刻肯定只能安排大赛选手的，排个不自信的上去踢不进士气打击太大了。有一说一，如果阿根廷 87 分不大脚开替补席，加时没那么长也许也不用踢点球了。不过很大原因还是这个裁判没能力，控场太差。我是希望两支南美球队在半决赛相遇，不要世界杯决赛变成欧洲杯。作为替补上场的 C 罗，听着就让人唏嘘。这次世界杯结束，梅西和 C 罗的世纪之争也结束了。作为一个观众，面对这种 4 年一次的大赛，看起来都觉得很珍贵（人生能有几个四年呢），更何况对于像梅西这样的球员呢？真心希望这次世界杯梅西不要有遗憾吧。","categories":[],"tags":[{"name":"cyber weekly","slug":"cyber-weekly","permalink":"https://orechou.github.io/tags/cyber-weekly/"}]},{"title":"【Cyber Weekly】No.1 The Shining","slug":"weekly/No.1 The Shining","date":"2022-12-04T14:00:00.000Z","updated":"2022-12-04T15:21:51.000Z","comments":true,"path":"2022/12/04/weekly/No.1 The Shining/","link":"","permalink":"https://orechou.github.io/2022/12/04/weekly/No.1%20The%20Shining/","excerpt":"","text":"Cyber weekly 收录本人获取到的 Crypto、Backend &amp; Mobile 相关资讯、技术，另外夹杂一些生活碎嘴。All work and no play makes Jack a dull boy.图摄于深圳高新园。上班，下班，是打工人的日常。 Crypto信任危机 - 中心化交易所透明度该何去何从https://tokeninsight.com/zh/research/market-analysis/trust-crisis-how-far-will-the-centralized-exchanges-transparency-go数据货币交易所的雷曼时刻。 2022年传统机构进入 Web3 里程碑https://twitter.com/0xjingle/status/1595327928543236096 中心化 Web3 - 你的小狐狸钱包还安全吗？https://tokeninsight.com/zh/research/market-analysis/unmasking-metamask-is-web3-really-decentralized-and-privateMetamask 在链上交互时使用的 Infura 的 RPC，Infura 是一个中心化的基础设施服务商，而 Infura 会收集用户的 IP 地址以及 ETH 钱包地址。 当我们在谈论去中心化身份（DID）时，我们在谈论什么https://mirror.xyz/0xF9e46113DDddB347259fcc2699283250Ac745303/MlMEFi_2dDqFH0vcISLNY2uSd9ZAnsbr_7FCSSbCFbw wtf.academyhttps://wtf.academy/learning-center一个 solidity 学习的网站，每个章节结束之后有练习可以做。 宏观经济网站http://currentmarketvaluation.com一个可以看宏观经济的网站，这个网站分别从收益率曲线、巴菲特指数、市盈率、利率、保证金债务、均值回归等6个角度看目前的市场在历史上所处的位置。 BackendTwitter Architecture 2022https://twitter.com/alexxubyte/status/1594008281340530688 CS 自学指南https://csdiy.wiki/收录了 CS 相关的课程视频，是比较好的课程资料。有时间重走学习的路线，比机械的背八股要好得多。我很反感背八股，可能因为我记忆力差，总是背不好吧。 Spring Boot 3.0 正式发布https://spring.io/blog/2022/11/24/spring-boot-3-0-goes-ga总结： 最低环境要求：Spring Boot 3.0 最低要求 Java 17 支持 GraalVM 原生镜像；支持具有 EE 9 baseline 的 Jakarta EE 10 提高应用可观察性：集成 Micrometer 支持具有 EE 9 baseline 的 Jakarta EE 10 依赖升级：Spring 框架 6.0+，第三方的技术依赖：https://github.com/spring-projects/spring-boot/releases/tag/v3.0.0Spring Boot 3.0 是第一个支持 Spring 6.0+ 和 GraalVM 的 Spring Boot 正式版本。 Life《巫师 3：狂猎》免费次世代更新内容公布据介绍，此次更新带来光线追踪、屏幕空间反射、植被强化等视觉改善内容，还为国内玩家带来了简体中文配音，并新增游戏视角和拍照模式等。《巫师 3：狂猎》次世代免费更新将于 12 月 14 日登陆 PC、PlayStation 5 和 Xbox Series S|X 平台。 快速将 iPhone 进入硬锁定状态同时按住手机电源和音量按钮，持续两秒，手机会有一个轻微的震动。屏幕上会出现三个选项：滑动关机、打给紧急联络人、取消。此刻手机已经进入「硬锁定」状态，即必须要密码才能解锁，指纹和面部识别都无法奏效。应该养成一个习惯，每当你要与手机分开、有一定人身风险的时候，要锁定我的 iPhone。 我的数据我做主：动手搭建一套自己的数据中心https://sspai.com/post/76919?utm_source=twitter&amp;utm_medium=social搭建这样一套数据中心需要有一定的技术背景。 手机博物馆https://www.mobilephonemuseum.com/这个网站收集了从 1980 年到如今的 2400 多款手机的照片和参数。","categories":[],"tags":[{"name":"cyber weekly","slug":"cyber-weekly","permalink":"https://orechou.github.io/tags/cyber-weekly/"}]},{"title":"【读书】《被讨厌的勇气：“自我启发之父”阿德勒的哲学课》","slug":"reading/被讨厌的勇气：“自我启发之父”阿德勒的哲学课","date":"2022-08-13T07:37:00.000Z","updated":"2022-08-13T07:40:45.264Z","comments":true,"path":"2022/08/13/reading/被讨厌的勇气：“自我启发之父”阿德勒的哲学课/","link":"","permalink":"https://orechou.github.io/2022/08/13/reading/%E8%A2%AB%E8%AE%A8%E5%8E%8C%E7%9A%84%E5%8B%87%E6%B0%94%EF%BC%9A%E2%80%9C%E8%87%AA%E6%88%91%E5%90%AF%E5%8F%91%E4%B9%8B%E7%88%B6%E2%80%9D%E9%98%BF%E5%BE%B7%E5%8B%92%E7%9A%84%E5%93%B2%E5%AD%A6%E8%AF%BE/","excerpt":"","text":"三句话总结本书 人生目的论。你现在所做所为，所经历、遭遇的一切都不是过去的原因造成的，而是受现在你的目的影响。（过去已经发生，你所能做的唯有改变自己的目的、心态） 课题分离（理清楚课题属于谁）、他者贡献（自己有贡献感即可，不需要关注别人的看法）。 将人生的聚光灯打在当下，过好此时此刻，不要特别在意过去（过去已经发生的无法改变）和未来（当下做的每一件事都影响着未来）。 简单总结和感受书的内容简单 &amp; 直观，以一个青年人与一个哲人的对话的形式展开。内容不多、章节很短，让人看着不累，我也许久没有完整看完过一本书了。更为主要的是最近工作 &amp; 生活压力比较大，外界噪音也比较多，很难有时间能够静下心来审视自己的内心。 最精华的3句书摘 ”即使你逃避人生课题、依赖人生谎言，那也不是因为你沾染了“恶”。这不是一个应该从道德方面来谴责的问题，它只是“勇气”的问题。“原谅自己、与自己和解：有些场合、有些事情、有些关系，我害怕去做、去拖延、去维护，心里有很大的负罪感、对自己失望，认为自己已经不行了。其实认清这是个勇气的问题，然后解决勇气的问题就好了，不要对自己失望很重要。 “有些男人会骂家庭主妇”又不挣钱！“或者”是谁养着你呀？“之类的话，也听到过有人说”钱随便你花，还有什么不满的呀？“之类的话，这都是多么无情的话呀！经济地位跟人的价值毫无关系。公司职员和家庭主妇只是劳动场所和任务不同，完全是”虽不同但平等“。”我已经成家立业，与妻子也即将迎来爱情的结晶。摘录这段问题是提醒自己不要变成这种讨厌、无情的人。 “跨出家门的那一瞬间，“旅行”已经开始，朝着目的地出发途中的每一个瞬间都是旅行。当然，即使因为某些事情而没能够到达金字塔，那也并非没有旅行。这就是现实性的人生。”我一直都在旅途中，希望自己把聚光灯打在当下，过好每一天、做好每一件事，别揪着过去不放，又一直对未来停留在幻想。","categories":[],"tags":[{"name":"Reading","slug":"Reading","permalink":"https://orechou.github.io/tags/Reading/"}]},{"title":"【生活】手机应用安装 & 使用指南","slug":"life/手机应用安装 & 使用指南","date":"2022-06-04T16:20:00.000Z","updated":"2022-06-05T07:48:04.198Z","comments":true,"path":"2022/06/05/life/手机应用安装 & 使用指南/","link":"","permalink":"https://orechou.github.io/2022/06/05/life/%E6%89%8B%E6%9C%BA%E5%BA%94%E7%94%A8%E5%AE%89%E8%A3%85%20&%20%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/","excerpt":"","text":"如今的世界，手机已经属于出行、工作、娱乐、生活所必不可缺少的设备。各种应用软件，例如知乎、抖音、淘宝等占据了人生的大部分时间。我作为电子产品的重度用户，在每天与电子设备的接触过程中，不仅耗费了大量的时间、也让身体出现一些问题。鉴于此，我决定优化手机应用软件的安装、使用，将手机的娱乐属性剔除，降低一些无效时间的消耗。 原则No.1 卸载所有游戏我不认为能在手机上玩到真正的好游戏，花点钱买 PS5 、Switch 你会有更好的游戏体验。手机游戏的最大优势是能够在任何时候杀掉你的时间。 No.2 劲量使用国外的软件 &amp; 服务如果不想被封禁、被 404，劲量选用国外的软件 &amp; 服务，做一个数字移民。 No.3 软件 &amp; 服务如果能通过电脑访问，劲量减少手机版安装此条规则主要是针对一些非实时性知识软件，例如：知乎、B 站。我在手机上刷知乎和 B 站大部分是娱乐内容、碎片化的讯息，过了一遍大脑什么都不会留下。如果使用电脑，我才会是主动有目的性的去了解一些内容。 No.4 卸载长时间不用的软件，让手机简单长时间不用的软件大概率之后也不会使用，而且现在流量很便宜，先卸载也没用任何关系。 一些软件推荐阅读iBooks目前对于数字书籍，已经弃坑了 kindle 、微信读书等一众硬软件。目前使用 epub 格式电子书 + iBooks + iCloud，可以在 iPhone、iPad 和 mac 上无缝切换，同步阅读记录、进度。 金融投资Futubull雪球Binance","categories":[],"tags":[{"name":"Life","slug":"Life","permalink":"https://orechou.github.io/tags/Life/"}]},{"title":"【Java】自定义 Spring Security 鉴权","slug":"java/Java_自定义 Spring Security 鉴权","date":"2022-06-01T09:00:00.000Z","updated":"2022-06-04T16:06:49.912Z","comments":true,"path":"2022/06/01/java/Java_自定义 Spring Security 鉴权/","link":"","permalink":"https://orechou.github.io/2022/06/01/java/Java_%E8%87%AA%E5%AE%9A%E4%B9%89%20Spring%20Security%20%E9%89%B4%E6%9D%83/","excerpt":"","text":"背景当我们使用 Spring 技术栈搭建单体的系统或服务时，若系统涉及到登录鉴权等功能，一般会使用 SpringSecurity 搭配一个 RBAC 的权限模型，很容易实现一套 OAuth2 鉴权、授权的流程。随着业务扩展，单体的服务作为一个微服务并入一个大的系统之后。我们为保证其他业务能够调用该单体服务，但是又无法让其他系统来使用该服务已有鉴权，从而引入其他微服务都用基础的鉴权服务。根据业务场景的区分，当单体服务内部使用的时候走 SpringSecurity 的鉴权，单体服务外部调用的时候使用基础鉴权服务鉴权。 基础要根据不同的场景启用或绕过 SpringSecurity。我们可以首先想到能否通过 URL 来区分不同的场景，使用 HttpSecurity 的 permitAll() 和 authenticated() 来让不同路径的接口是否需要走鉴权。除此之外，可以去修改 SpringSecurity 的 Filter ，使用自定义 Filter 或者用动态代理对 Filter 进行增强。 实现1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768@Aspect@Component@Slf4jpublic class AuthorizationHeaderAspect &#123; /** * 基础鉴权服务 Feign 调用业务 */ @Autowired private OauthFeignBiz oauthFeignBiz; @Pointcut(&quot;execution(* org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(..))&quot;) public void securityOauth2DoFilter() &#123; &#125; @Pointcut(&quot;execution(* org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(..))&quot;) public void securitySecurityInterceptor2DoFilter() &#123; &#125; @Around(&quot;securityOauth2DoFilter()&quot;) public void enhanceSecurityOauth2DoFilter(ProceedingJoinPoint joinPoint) throws Throwable &#123; Object[] args = joinPoint.getArgs(); if (args == null || args.length != 3 || !(args[0] instanceof HttpServletRequest &amp;&amp; args[1] instanceof javax.servlet.ServletResponse &amp;&amp; args[2] instanceof FilterChain)) &#123; joinPoint.proceed(); return; &#125; HttpServletRequest request = (HttpServletRequest) args[0]; String accessToken = request.getHeader(&quot;Authorization&quot;); if (StringUtils.isNotBlank(request.getParameter(&quot;sceneId&quot;)) &amp;&amp; StringUtils.isNotBlank(request.getParameter(&quot;sceneType&quot;))) &#123; // 这里我们可以根据业务场景确定走哪种鉴权方式 SecurityUtils.setBaseAuth(true); &#125; else &#123; SecurityUtils.setBaseAuth(false); &#125; if (SecurityUtils.isBaseAuth()) &#123; Response&lt;CheckTokenResponse&gt; checkTokenResponse = oauthFeignBiz.checkToken(accessToken); if (checkTokenResponse.getCode() == 0) &#123; SecurityUtils.setBaseAuth((true)); ((FilterChain) args[2]).doFilter((ServletRequest) args[0], (ServletResponse) args[1]); &#125; else &#123; throw new Exception(&quot;鉴权失败&quot;); &#125; &#125; else &#123; // 让原 Filter 的逻辑继续执行 joinPoint.proceed(); &#125; &#125; @Around(&quot;securitySecurityInterceptor2DoFilter()&quot;) public void enhanceSecuritySecurityInterceptor2DoFilter(ProceedingJoinPoint joinPoint) throws Throwable &#123; Object[] args = joinPoint.getArgs(); if (args == null || args.length != 3 || !(args[0] instanceof HttpServletRequest &amp;&amp; args[1] instanceof javax.servlet.ServletResponse &amp;&amp; args[2] instanceof FilterChain)) &#123; joinPoint.proceed(); return; &#125; if (!SecurityUtils.isBaseOauth()) &#123; joinPoint.proceed(); return; &#125; ((FilterChain) args[2]).doFilter((ServletRequest) args[0], (ServletResponse) args[1]); &#125;&#125;","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"https://orechou.github.io/tags/Java/"}]},{"title":"【资源】Batcave Resources 第一期","slug":"other/网络资源","date":"2022-05-13T15:40:00.000Z","updated":"2022-07-12T07:41:33.804Z","comments":true,"path":"2022/05/13/other/网络资源/","link":"","permalink":"https://orechou.github.io/2022/05/13/other/%E7%BD%91%E7%BB%9C%E8%B5%84%E6%BA%90/","excerpt":"","text":"下面记录一些平时收录的一些资源。 资源站[1]Z-Library: 全球最大的数字图书馆目前对于数字书籍，已经弃坑了 kindle 、微信读书等一众硬软件。目前使用 epub 格式电子书 + iBooks + iCloud，可以在 iPhone、iPad 和 mac 上无缝切换，同步阅读记录、进度。 小工具[1]Batman-Logo: 新蝙蝠侠 Logo 生成器 [2]earth.fm: 聆听世界的白噪音 [3]muselink: 极简数字名片，只为创作者 [4]imgg: 以图片的方式截取并分享万物，简单，美观且隐私安全 [5]ActivityWatch: 一款免费的自动追踪在你设备上使用时间的软件","categories":[],"tags":[{"name":"Other","slug":"Other","permalink":"https://orechou.github.io/tags/Other/"}]},{"title":"【歌曲】Deadman's Gun && That's The Way It Is","slug":"life/Deadman's Gun","date":"2022-04-27T16:25:00.000Z","updated":"2023-01-25T15:09:00.616Z","comments":true,"path":"2022/04/28/life/Deadman's Gun/","link":"","permalink":"https://orechou.github.io/2022/04/28/life/Deadman's%20Gun/","excerpt":"","text":"成长道路是比较痛苦的，从青年一路走过来，自己的棱角被磨圆，没有了以往的神气。往往在深夜的时候，想起曾经那些喜欢的英雄，都已过去，都已逝去。而我才后知后觉，忘了告别。 歌曲 Deadman’s Gun 的 YouTube 地址。歌词如下： 1234567891011121314151617181920212223242526272829303132333435363738394041Your hands uponA deadman&#x27;s gun, and you&#x27;reLookin&#x27; down the sightsYour heart is warmAnd the seams are torn, and they&#x27;veGiven you a reason to fightAnd you&#x27;re not gonna takeWhat they&#x27;ve got to giveAnd you&#x27;re not gonna let &#x27;em take your will to liveBecause they&#x27;ve taken enoughAnd you&#x27;ve given them all you can giveAnd luck won&#x27;t save them tonightThey&#x27;ve given you a reason to fightAnd all the storms you&#x27;ve been chasin&#x27;About to rain down tonightAnd all that pain you&#x27;ve been facin&#x27;About to come into the lightYour hands uponA deadman&#x27;s gun, and you&#x27;reLookin&#x27; down the sightsYour heart is warmAnd the seams are torn, and they&#x27;veGiven you a reason to fightAnd you&#x27;re not gonna takeWhat they&#x27;ve got to giveAnd you&#x27;re not gonna let &#x27;em take your will to liveBecause they&#x27;ve taken enoughAnd you&#x27;ve given them all you can giveAnd luck won&#x27;t save them tonightThey&#x27;ve given you a reason to fightAnd all the storms you&#x27;ve been chasin&#x27;About to rain down tonightAnd all that pain you&#x27;ve been facin&#x27;About to come into the light 歌曲 That’s The Way It Is 的 YouTube 地址。歌词如下： 1234567891011121314151617181920212223242526272829303132333435363738394041[Verse 1]The many miles we walkedThe many things we learnedThe building of a shrineOnly just to burnMay the wind be at your backGood fortune touch your handMay the cards lay out a straightAll from your command[Chorus]That&#x27;s the way it isThat’s the way it isThat&#x27;s the way it isThat&#x27;s the way it is[Verse 2]Blue heron leaves the northern skyTrusts the journey to new heightsWhat’s the meaning of the scarIf we don&#x27;t know how to healShould we ever be apartThen how does it feel[Chorus]That&#x27;s the way it isThat&#x27;s the way it isThat&#x27;s the way it isThat&#x27;s the way it is[Bridge]Shine light into darknessShine light into darkness[Chorus]That&#x27;s the way it isThat&#x27;s the way it is (So many miles to walk)That’s the way it is (So many things we’ve got to learn)That&#x27;s the way it is (Oh, that’s the way it is)That&#x27;s the way it is (Oh)That&#x27;s the way it is","categories":[],"tags":[{"name":"Life","slug":"Life","permalink":"https://orechou.github.io/tags/Life/"},{"name":"Song","slug":"Song","permalink":"https://orechou.github.io/tags/Song/"}]},{"title":"【生活】EDC 清单","slug":"life/EDC 清单","date":"2022-04-12T15:40:00.000Z","updated":"2022-05-29T09:32:45.464Z","comments":true,"path":"2022/04/12/life/EDC 清单/","link":"","permalink":"https://orechou.github.io/2022/04/12/life/EDC%20%E6%B8%85%E5%8D%95/","excerpt":"","text":"EDC means everyday carry，即是每日通勤携带的物件。之前看过一本书《只过必要生活》，里面有一个建议是将你每天会用到的物品都放到通勤背包中每天携带。这篇博文就是整理我如今每天必用、必带的物品。 数码物品No.1 MacBook Pro 13公司配发的 MacBook Pro (13-inch, 2020)，Intel i7，32G。用途：写代码，写博客。 No.2 iPhone13 Pro Max自用手机，128G。用途：社交，投资，资讯。 No.3 Apple Watch Series 6自用手表，44 毫米款。用途：看时间，记录数据。 非数码物品No.1 新秀丽背包","categories":[],"tags":[{"name":"Life","slug":"Life","permalink":"https://orechou.github.io/tags/Life/"}]},{"title":"【iOS】在地图中绘制坐标轨迹","slug":"iOS/iOS_在地图中绘制坐标轨迹","date":"2022-03-27T09:43:00.000Z","updated":"2022-03-27T11:15:57.214Z","comments":true,"path":"2022/03/27/iOS/iOS_在地图中绘制坐标轨迹/","link":"","permalink":"https://orechou.github.io/2022/03/27/iOS/iOS_%E5%9C%A8%E5%9C%B0%E5%9B%BE%E4%B8%AD%E7%BB%98%E5%88%B6%E5%9D%90%E6%A0%87%E8%BD%A8%E8%BF%B9/","excerpt":"","text":"一直有想做属于自己的 App 的想法，零零散散地有学习一些内容，现在决定开启一个记录学习过程的系列博文，以此来巩固自己所学到的 iOS 开发知识和激励自己把第一个 App 实现出来。脑海中一直有个做地图类应用的想法，本科做移动轨迹相关的毕业设计。此类应用主要包括地图（Map）、坐标点（Location）、绘制轨迹（Polyline）几个要素。这篇博文将会使用 SwiftUI 在地图上连接坐标点绘制出轨迹。GPS 坐标数据可以在 microsoft 上下载。效果如下：首先创建一个 SwiftUI 工程的项目，项目的文件组织如下：先定义坐标点的数据结构，代码如下： 12345678910import Foundationstruct Location: Hashable, Codable, Identifiable &#123; var id: Int // 经度 var longitude: Double // 纬度 var latitude: Double var isValid: Bool&#125; 坐标数据的 ViewModel，我们将从 location.json 中加载所有的坐标点，代码如下： 1234567891011121314151617181920212223242526272829import Foundationfinal class LocationViewModel: ObservableObject &#123; @Published var locations: [Location] = load(&quot;location.json&quot;) &#125;func load&lt;T: Decodable&gt;(_ fileName: String) -&gt; T &#123; // The data value type allows simple byte buffers to take on behavior of Foundation objects. let data: Data guard let file = Bundle.main.url(forResource: fileName, withExtension: nil) else &#123; fatalError(&quot;Couldn&#x27;t find \\(fileName) in main bundle.&quot;) &#125; do &#123; data = try Data(contentsOf: file) &#125; catch &#123; fatalError(&quot;Couldn&#x27;t load \\(fileName) from main bundle:\\n\\(error)&quot;) &#125; do &#123; let decoder = JSONDecoder() return try decoder.decode(T.self, from: data) &#125; catch &#123; fatalError(&quot;Couldn&#x27;t parse \\(fileName) as \\(T.self):\\n\\(error)&quot;) &#125;&#125; 接下来我们将利用 UIViewRepresentable 这个协议实现将 UIKit 的 UIView 集成到 SwiftUI 中使用。UIViewRepresentable 只包含四个方法。其中 makeUIView , updateUIView 用于创建和更新视图。makeCoordinator 创建协调器，用于通知其它 UI 与该 View 之间的变化更新。dismantleUIView 用于在移除 View 时做一些善后操作。四个方法在 UIViewRepresentable 生命周期中的调用顺序如下：我们的 MapView 代码如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748import SwiftUIimport MapKitstruct MapView: UIViewRepresentable &#123; private let locationViewModel = LocationViewModel() private let mapZoomEdgeInsets = UIEdgeInsets(top: 30.0, left: 30.0, bottom: 30.0, right: 30.0) func makeCoordinator() -&gt; MapViewCoordinator &#123; MapViewCoordinator(self) &#125; func makeUIView(context: Context) -&gt; MKMapView &#123; let mapView = MKMapView() mapView.showsUserLocation = true mapView.delegate = context.coordinator return mapView &#125; func updateUIView(_ uiView: MKMapView, context: UIViewRepresentableContext&lt;MapView&gt;) &#123; updateOverlays(from: uiView) &#125; private func updateOverlays(from mapView: MKMapView) &#123; mapView.removeOverlays(mapView.overlays) var coordinates = [CLLocationCoordinate2D]() for i in 0..&lt;locationViewModel.locations.count &#123; let location = locationViewModel.locations[i] coordinates.append(CLLocationCoordinate2D(latitude: location.latitude, longitude: location.longitude)) &#125; let polyline = MKPolyline(coordinates: coordinates, count: locationViewModel.locations.count) mapView.addOverlay(polyline) setMapZoomArea(map: mapView, polyline: polyline, edgeInsets: mapZoomEdgeInsets, animated: true) &#125; private func setMapZoomArea(map: MKMapView, polyline: MKPolyline, edgeInsets: UIEdgeInsets, animated: Bool = false) &#123; map.setVisibleMapRect(polyline.boundingMapRect, edgePadding: edgeInsets, animated: animated) &#125;&#125;struct MapView_Previews: PreviewProvider &#123; static var previews: some View &#123; MapView() &#125;&#125; 协调器 MayViewCoordinator 代码如下： 12345678910111213141516171819202122232425262728import Foundationimport MapKitfinal class MapViewCoordinator: NSObject, MKMapViewDelegate &#123; private let mapView: MapView init(_ control: MapView) &#123; self.mapView = control &#125; func mapView(_ mapView: MKMapView, didAdd views: [MKAnnotationView]) &#123; if let annotationView = views.first, let annotation = annotationView.annotation &#123; if annotation is MKUserLocation &#123; let region = MKCoordinateRegion(center: annotation.coordinate, latitudinalMeters: 1000, longitudinalMeters: 1000) mapView.setRegion(region, animated: true) &#125; &#125; &#125; func mapView(_ mapView: MKMapView, rendererFor overlay: MKOverlay) -&gt; MKOverlayRenderer &#123; let renderer = MKPolylineRenderer(overlay: overlay) // set the line properties such as color and width renderer.strokeColor = .blue renderer.lineWidth = 3.0 return renderer &#125;&#125; 参考链接https://www.fatbobman.com/posts/uikitInSwiftUI/https://medium.com/@mauvazquez/decoding-a-polyline-and-drawing-it-with-swiftui-mapkit-611952bd0ecb","categories":[],"tags":[{"name":"iOS","slug":"iOS","permalink":"https://orechou.github.io/tags/iOS/"},{"name":"SwiftUI","slug":"SwiftUI","permalink":"https://orechou.github.io/tags/SwiftUI/"}]},{"title":"【生活】记事一则","slug":"life/记事一则","date":"2022-02-13T07:40:00.000Z","updated":"2022-05-13T15:52:31.736Z","comments":true,"path":"2022/02/13/life/记事一则/","link":"","permalink":"https://orechou.github.io/2022/02/13/life/%E8%AE%B0%E4%BA%8B%E4%B8%80%E5%88%99/","excerpt":"","text":"下午，yoyo 和两支小🐱虎在😴。我坐在客厅写一些文字，记录一下心情。 首先要说的是，年前我和 yoyo 在老家举办完了婚礼，虽然我们还没有领证，但终于我们也算是完成了去年最大、最重要的一个 OKR。现在 yoyo 也🤰🏻了，虽然这也是之前一直计划的事情，但当 ta 真的来了的事情，我内心除了惊喜 max，还是有些慌张的。这种慌张不能让 yoyo 看出来。年后没几天我跟 yoyo 就工作城市深圳了，这座城市是很忙碌、劳累的。所以这段时间，我也一直在考虑怎么让我们更加轻松一些。所以现在关注了本身工作之外的一些内容，例如 区块链、NFTs、美股等等，想要找到一些虽不能说完成跨越，但至少能让自己工作不那么累的事情。我也一直在考虑未来自由职业的道路，但无奈自己现在很缺乏自信和对自己的认同。 今年定了几个 OKR，努力去实现吧。另外我得放松体验生活。不管再多事情，生活是我们自己的。先不说这么多了，我得叫 yoyo 起来出去散步了。","categories":[],"tags":[{"name":"Life","slug":"Life","permalink":"https://orechou.github.io/tags/Life/"}]},{"title":"【MySQL】实现列表数据置顶","slug":"mysql/MySQL_实现列表数据置顶","date":"2021-08-16T06:46:00.000Z","updated":"2022-03-27T11:14:09.194Z","comments":true,"path":"2021/08/16/mysql/MySQL_实现列表数据置顶/","link":"","permalink":"https://orechou.github.io/2021/08/16/mysql/MySQL_%E5%AE%9E%E7%8E%B0%E5%88%97%E8%A1%A8%E6%95%B0%E6%8D%AE%E7%BD%AE%E9%A1%B6/","excerpt":"","text":"有的列表获取的业务场景，需要根据一些条件将数据置顶。 例如有一张表有 id 和 name 两个字段。数据表如下。 id name 1 1_name 2 2_name 3 3_name 4 4_name 5 5_name 6 6_name 7 7_name 8 8_name 9 9_name 10 10_name 若需要将 id 为 5 和 7 的数据置顶，并且分页的 size 是 5 的话，我们的 SQL 可以这样写： 1234567SELECT * FROM goods ORDER BY CASE WHEN id = 5 THEN -10000 WHEN id = 7 THEN -9999 ELSE id ENDLIMIT 0, 5","categories":[],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://orechou.github.io/tags/MySQL/"}]},{"title":"【MySQL】慢 SQL 分析","slug":"mysql/MySQL_慢 SQL 分析","date":"2021-08-10T04:30:00.000Z","updated":"2022-03-27T11:14:03.743Z","comments":true,"path":"2021/08/10/mysql/MySQL_慢 SQL 分析/","link":"","permalink":"https://orechou.github.io/2021/08/10/mysql/MySQL_%E6%85%A2%20SQL%20%E5%88%86%E6%9E%90/","excerpt":"","text":"慢查询日志分析设置慢查询可以通过修改命令设置： 设置开启：SET GLOBAL slow_query_log = 1; #默认未开启，开启会影响性能，mysql重启会失效 查看是否开启：SHOW VARIABLES LIKE ‘%slow_query_log%’; 设置阈值：SET GLOBAL long_query_time=3; 查看阈值：SHOW 【GLOBAL】 VARIABLES LIKE ‘long_query_time%’; #重连或新开一个会话才能看到修改值 也可以通过修改配置文件设置，配置文件 my.conf 会一直生效，在[mysqld]下配置： 12345[mysqld]slow_query_log = 1; #开启slow_query_log_file=/var/lib/mysql/atguigu-slow.log #慢日志地址，缺省文件名host_name-slow.loglong_query_time=3; #运行时间超过该值的SQL会被记录，默认值&gt;10log_output=FILE 获取慢 SQL 信息查看慢查询日志记录数：SHOW GLOBAL STATUS LIKE ‘%Slow_queries%’; 模拟语句：SELECT SLEEP(4); 查看慢查询日志： 12345678910$ cat /usr/local/var/mysql/OreChoudeMacBook-Pro-slow.log/usr/local/Cellar/mysql/8.0.25_1/bin/mysqld, Version: 8.0.25 (Homebrew). started with:Tcp port: 3306 Unix socket: /tmp/mysql.sockTime Id Command Argument# Time: 2021-08-10T06:29:53.513752Z# User@Host: root[root] @ localhost [127.0.0.1] Id: 11# Query_time: 4.003605 Lock_time: 0.000000 Rows_sent: 1 Rows_examined: 1use test;SET timestamp=1628576989;select sleep(4); 使用 mysqldumpslow 分析使用样例： mysqldumpslow -s r -t 10 /usr/local/var/mysql/OreChoudeMacBook-Pro-slow.log #得到返回记录集最多的10个SQL mysqldumpslow -s c -t 10 /usr/local/var/mysql/OreChoudeMacBook-Pro-slow.log #得到访问次数最多的10个SQL mysqldumpslow -s t -t 10 -g “LEFT JOIN” /usr/local/var/mysql/OreChoudeMacBook-Pro-slow.log #得到按照时间排序的前10条里面含有左连接的查询语句 mysqldumpslow -s r -t 10 /usr/local/var/mysql/OreChoudeMacBook-Pro-slow.log | more #结合| more使用，防止爆屏情况 Explain 分析Show Profile 分析Show Profile 能够获取比 Explain 更为详细的信息，能够分析当前会话中语句执行时的资源消耗，获取 SQL 在整个生命周期的时间。 开启 Profile12开启：set profiling = on;查看：SHOW VARIABLES LIKE &#x27;profiling%&#x27;; 开启后 MySQL 后台会保存最近 15 次的结果。 查看 Profile使用 SHOW PROFILES 可以查看最近的 15 次结果。 查看具体的 Profile通过 Query_ID 可以得到具体 SQL 从连接 - 服务 - 引擎 - 存储四层结构完整生命周期的耗时。 使用命令：SHOW PROFILE CPU, BLOCK IO FOR Query_ID 可用参数type: ALL #显示所有的开销信息 BLOCK IO #显示块IO相关开销 CONTEXT SWITCHES #上下文切换相关开销 CPU #显示CPU相关开销信息 IPC #显示发送和接收相关开销信息 MEMORY #显示内存相关开销信息 PAGE FAULTS #显示页面错误相关开销信息 SOURCE #显示和Source_function，Source_file，Source_line相关的开销信息 SWAPS #显示交换次数相关开销的信息 如果出现以下几个状态则 SQL 需要重点分析： converting HEAP to MyISAM #查询结果太大，内存不够用了，在往磁盘上搬 Creating tmp table #创建了临时表，回先把数据拷贝到临时表，用完后再删除临时表 Copying to tmp table on disk #把内存中临时表复制到磁盘，危险！！！ locked","categories":[],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://orechou.github.io/tags/MySQL/"}]},{"title":"【MySQL】Explain","slug":"mysql/MySQL_Explain","date":"2021-08-06T09:00:00.000Z","updated":"2022-03-27T11:14:13.632Z","comments":true,"path":"2021/08/06/mysql/MySQL_Explain/","link":"","permalink":"https://orechou.github.io/2021/08/06/mysql/MySQL_Explain/","excerpt":"","text":"MySQL ExplainExplain 是 MySQL 自带的查询优化器。 使用 Explain + SQL 可查询出执行的相关信息，主要包含以下 10 个属性：id, select_type, table, type, possible_key, key, key_len, ref, row, filtered, Extra 数据库性能瓶颈，主要关注 CPU 和 IO。 id反映的是表的读取顺序，或者查询中 SELECT 的执行顺序。 小表永远驱动大表，三种情况：（1）id 相同，执行顺序是由上至下的（2）id 不同，如果是子查询，id 序号会递增，id 值越大优先级越高，越先被执行（3）id 存在相同的，也存在不同的，所有组中，id 越大越先执行，如果 id 相同的，从上往下顺序执行 select_type反映的是 MySQL 理解的查询类型，有几下几种： SIMPLE：简单的 SELECT 查询，查询中不包含子查询或 UNION PRIMARY：查询中若包含任何复杂的字部分，最外层查询标记为 PRIMARY SUBQUERY：SELECT 或 WHERE 列表中的子查询 DERIVED：在 FROM 列表中包含的子查询，MySQL 会递归执行这些子查询，把结果放在临时表里 UNION：若第二个 SELECT 出现在 UNION 后，则被标记为 UNION，若 UNION 包含在 FROM 字句的子查询中，外层 SELECT 将被标记为 DERIVED UNION RESULT：UNION 后的结果集 table反映的是数据从哪张表中读取出来。 例如 &lt;derived2&gt; 表示从 id 为 2 的临时表读取。 typetype 是访问类型排序，反映的是 SQL 的优化状态，有如下几种： system：从单表只查出一行记录（等于系统表），这是 const 类型的特例，一般不会出现 const：查询条件用到了常量，通过索引一次就找到，常在使用 primary key 或 unique 索引中出现 eq_ref：唯一性索引扫描，对于每个索引键，表中只有一条记录与之匹配，常见于主键或唯一索引扫描 ref：非唯一性索引扫描，返回匹配某个单独值的所有行，本质上也是一种索引访问，它可能会找到多个符合条件的行，与eq_ref的差别是eq_ref只匹配了一条记录 range：只检索给定范围的行，使用一个索引来选择行。key列显示使用了哪个索引，一般是在where语句中出现了 between、&lt;、&gt;、in 等的查询 index：full Index scan，index 和 all 的区别为 index 类型只遍历索引树。这通常比 all 快，因为索引文件通常比数据文件小 all：全表扫描，如果查询数据量很大时，全表扫描效率是很低的 在 SQL 优化中至少做到 range 级别，最好能达到 ref 级别 possible_key &amp; key &amp; key_lenpossible_key 反映的是 MySQL 推测可能用到的索引，不一定被查询实际使用到。key 反映的是实际使用到的索引，若为 null 则是因为没有建索引或者索引失效。key_len 反映索引中使用的字节数，可计算计算查询中使用的索引的长度，越短越好。其显示的值为索引字段的最大可能长度，而非实际使用长度。 refref 反映的是哪些列或者常量被用于查找索引列上的值。 rowsrows 反映的根据表的统计信息和索引选用的情况，大致估算出来到找到所有记录所需要读取的行数。 filtered使用 explain extended 时会出现这个列，5.7 之后的版本默认就有这个字段。这个字段表示存储引擎返回的数据在 server 层过滤后，剩下多少满足查询的记录数量的比例，不是具体记录数。 ExtraExtra 反映的不适合在其他列显示，但是也很重要的信息，主要有以下几种： Using filesort：MySQL 中无法利用索引完成的排序，这时会对数据使用一个外部的索引排序，而不是按照表内的索引顺序进行读取。 Using temporary：使用了临时表保存中间结果，MySQL 在对查询结果排序时使用临时表。常见于排序 order by 和分组查询 group by。 Using index：MySQL 相应的 select 操作中使用了覆盖索引，避免了访问表的数据行，效率高。 Using where：MySQL 使用了 where 过滤。 Using join buffer：MySQL 使用了连接缓存。 Impossible where：where 子句的值为 false。 Distinct：优化 distinct 操作，在找到第一匹配的元组后即停止找同样值的动作。","categories":[],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://orechou.github.io/tags/MySQL/"}]}],"categories":[],"tags":[{"name":"cyber weekly","slug":"cyber-weekly","permalink":"https://orechou.github.io/tags/cyber-weekly/"},{"name":"Tools","slug":"Tools","permalink":"https://orechou.github.io/tags/Tools/"},{"name":"Efficiency","slug":"Efficiency","permalink":"https://orechou.github.io/tags/Efficiency/"},{"name":"Life","slug":"Life","permalink":"https://orechou.github.io/tags/Life/"},{"name":"Reading","slug":"Reading","permalink":"https://orechou.github.io/tags/Reading/"},{"name":"Java","slug":"Java","permalink":"https://orechou.github.io/tags/Java/"},{"name":"Other","slug":"Other","permalink":"https://orechou.github.io/tags/Other/"},{"name":"Song","slug":"Song","permalink":"https://orechou.github.io/tags/Song/"},{"name":"iOS","slug":"iOS","permalink":"https://orechou.github.io/tags/iOS/"},{"name":"SwiftUI","slug":"SwiftUI","permalink":"https://orechou.github.io/tags/SwiftUI/"},{"name":"MySQL","slug":"MySQL","permalink":"https://orechou.github.io/tags/MySQL/"}]}